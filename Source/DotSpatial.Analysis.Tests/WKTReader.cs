using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
//using DotSpatial.Topology;
using GeoAPI.Geometries;

namespace DotSpatial.Analysis.Tests
{
    public static class WKTReader
    {
        public static IEnumerable<Coordinate> CoordinatesFromWKT(string wkt)
        {
            try
            {
            //wkt = "POLYGON((1683589.2500000000000000 7133882.0000000000000000, 1683565.6250000000000000 7133859.0000000000000000, 1683561.3750000000000000 7133851.0000000000000000, 1683553.1250000000000000 7133827.0000000000000000, 1683543.8750000000000000 7133811.0000000000000000, 1683529.5000000000000000 7133795.0000000000000000, 1683518.3750000000000000 7133795.5000000000000000, 1683486.2500000000000000 7133807.0000000000000000, 1683470.1250000000000000 7133811.5000000000000000, 1683454.0000000000000000 7133815.0000000000000000, 1683446.0000000000000000 7133818.5000000000000000, 1683438.0000000000000000 7133824.0000000000000000, 1683424.5000000000000000 7133840.5000000000000000, 1683399.3750000000000000 7133881.5000000000000000, 1683367.3750000000000000 7133903.0000000000000000, 1683351.2500000000000000 7133910.5000000000000000, 1683311.1250000000000000 7133923.0000000000000000, 1683279.0000000000000000 7133938.5000000000000000, 1683263.0000000000000000 7133950.0000000000000000, 1683255.1250000000000000 7133958.0000000000000000, 1683245.2500000000000000 7133982.5000000000000000, 1683229.5000000000000000 7134015.0000000000000000, 1683223.1250000000000000 7134023.5000000000000000, 1683200.5000000000000000 7134068.5000000000000000, 1683200.6250000000000000 7134077.0000000000000000, 1683206.5000000000000000 7134101.0000000000000000, 1683193.6250000000000000 7134117.5000000000000000, 1683189.6250000000000000 7134125.5000000000000000, 1683188.8750000000000000 7134133.5000000000000000, 1683193.8750000000000000 7134149.5000000000000000, 1683198.0000000000000000 7134157.5000000000000000, 1683206.3750000000000000 7134169.0000000000000000, 1683230.3750000000000000 7134152.0000000000000000, 1683246.3750000000000000 7134144.5000000000000000, 1683270.5000000000000000 7134138.5000000000000000, 1683302.7500000000000000 7134134.0000000000000000, 1683335.5000000000000000 7134135.0000000000000000, 1683391.3750000000000000 7134134.5000000000000000, 1683415.6250000000000000 7134131.5000000000000000, 1683431.6250000000000000 7134125.5000000000000000, 1683439.6250000000000000 7134120.5000000000000000, 1683446.7500000000000000 7134112.0000000000000000, 1683450.0000000000000000 7134104.0000000000000000, 1683450.7500000000000000 7134096.0000000000000000, 1683450.0000000000000000 7134088.0000000000000000, 1683447.6250000000000000 7134080.0000000000000000, 1683447.1250000000000000 7134071.5000000000000000, 1683454.2500000000000000 7134063.5000000000000000, 1683462.2500000000000000 7134059.5000000000000000, 1683502.3750000000000000 7134035.5000000000000000, 1683534.2500000000000000 7134012.5000000000000000, 1683547.0000000000000000 7133996.0000000000000000, 1683554.8750000000000000 7133980.0000000000000000, 1683561.1250000000000000 7133953.0000000000000000, 1683561.6250000000000000 7133925.5000000000000000, 1683563.8750000000000000 7133906.5000000000000000, 1683570.8750000000000000 7133890.0000000000000000, 1683578.8750000000000000 7133884.0000000000000000, 1683589.2500000000000000 7133882.0000000000000000))"
            var trimStart = wkt.Replace("POLYGON((", "");
            var trimEnd = trimStart.Replace("))", "");
            var stringArray = trimEnd.Split(',');

            var coordinatesList = new List<Coordinate>();

            foreach (string s in stringArray)
            {
                var removedLeadingAndTrailingWhiteSpace =  s.Trim();
                var removedDots = removedLeadingAndTrailingWhiteSpace.Replace(".", ",");
                var q = removedDots.Split(' ');
                
                Coordinate coordinate = new Coordinate();
                double x;
                if (!Double.TryParse(q[0], out x))
                {
                    throw new Exception();
                }
                coordinate.X = x;

                double y;
                if (!Double.TryParse(q[1], out y))
                {
                    throw new Exception();
                }
                coordinate.Y = y;

                coordinatesList.Add(coordinate);
            }

            return coordinatesList;
            }
            catch (Exception exception)
            {

                throw;
            }
        }
    }
}


//"POLYGON((1683589.2500000000000000 7133882.0000000000000000, 1683565.6250000000000000 7133859.0000000000000000, 1683561.3750000000000000 7133851.0000000000000000, 1683553.1250000000000000 7133827.0000000000000000, 1683543.8750000000000000 7133811.0000000000000000, 1683529.5000000000000000 7133795.0000000000000000, 1683518.3750000000000000 7133795.5000000000000000, 1683486.2500000000000000 7133807.0000000000000000, 1683470.1250000000000000 7133811.5000000000000000, 1683454.0000000000000000 7133815.0000000000000000, 1683446.0000000000000000 7133818.5000000000000000, 1683438.0000000000000000 7133824.0000000000000000, 1683424.5000000000000000 7133840.5000000000000000, 1683399.3750000000000000 7133881.5000000000000000, 1683367.3750000000000000 7133903.0000000000000000, 1683351.2500000000000000 7133910.5000000000000000, 1683311.1250000000000000 7133923.0000000000000000, 1683279.0000000000000000 7133938.5000000000000000, 1683263.0000000000000000 7133950.0000000000000000, 1683255.1250000000000000 7133958.0000000000000000, 1683245.2500000000000000 7133982.5000000000000000, 1683229.5000000000000000 7134015.0000000000000000, 1683223.1250000000000000 7134023.5000000000000000, 1683200.5000000000000000 7134068.5000000000000000, 1683200.6250000000000000 7134077.0000000000000000, 1683206.5000000000000000 7134101.0000000000000000, 1683193.6250000000000000 7134117.5000000000000000, 1683189.6250000000000000 7134125.5000000000000000, 1683188.8750000000000000 7134133.5000000000000000, 1683193.8750000000000000 7134149.5000000000000000, 1683198.0000000000000000 7134157.5000000000000000, 1683206.3750000000000000 7134169.0000000000000000, 1683230.3750000000000000 7134152.0000000000000000, 1683246.3750000000000000 7134144.5000000000000000, 1683270.5000000000000000 7134138.5000000000000000, 1683302.7500000000000000 7134134.0000000000000000, 1683335.5000000000000000 7134135.0000000000000000, 1683391.3750000000000000 7134134.5000000000000000, 1683415.6250000000000000 7134131.5000000000000000, 1683431.6250000000000000 7134125.5000000000000000, 1683439.6250000000000000 7134120.5000000000000000, 1683446.7500000000000000 7134112.0000000000000000, 1683450.0000000000000000 7134104.0000000000000000, 1683450.7500000000000000 7134096.0000000000000000, 1683450.0000000000000000 7134088.0000000000000000, 1683447.6250000000000000 7134080.0000000000000000, 1683447.1250000000000000 7134071.5000000000000000, 1683454.2500000000000000 7134063.5000000000000000, 1683462.2500000000000000 7134059.5000000000000000, 1683502.3750000000000000 7134035.5000000000000000, 1683534.2500000000000000 7134012.5000000000000000, 1683547.0000000000000000 7133996.0000000000000000, 1683554.8750000000000000 7133980.0000000000000000, 1683561.1250000000000000 7133953.0000000000000000, 1683561.6250000000000000 7133925.5000000000000000, 1683563.8750000000000000 7133906.5000000000000000, 1683570.8750000000000000 7133890.0000000000000000, 1683578.8750000000000000 7133884.0000000000000000, 1683589.2500000000000000 7133882.0000000000000000))"
